package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"
	"strconv"

	"github.com/staugaard/app-os/core/internal/graph/model"
	"github.com/staugaard/app-os/core/internal/pb"
)

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	response, err := r.UsersService.List(ctx, &pb.ListRequest{})
	if err != nil {
		return nil, err
	}

	users := make([]*model.User, len(response.Users))
	for i, user := range response.Users {
		users[i] = &model.User{
			ID:   strconv.FormatUint(uint64(user.Id), 10),
			Name: user.Name,
		}
	}
	return users, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
